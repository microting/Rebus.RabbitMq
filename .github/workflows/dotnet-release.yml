name: .NET Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: getong/rabbitmq-action@v1.2
      with:
        rabbitmq version: '3.8.2-management-alpine'
        host port: 5672
        rabbitmq user: 'guest'
        rabbitmq password: 'guest'
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release
    - name: Test
      run: dotnet test Rebus.RabbitMq.Tests --no-build --verbosity normal -c Release
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Install rabbitmq
      shell: pwsh
      run: choco install rabbitmq -Version 3.8.5
    - name: Restore dependencies
      run:  |
        dotnet nuget locals all --clear
        dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release
    - name: Test
      run: dotnet test Rebus.RabbitMq.Tests --no-build --verbosity normal -c Release
  deploy:
    needs: [build-windows, build-ubuntu]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: .0.x
    - name: Install dependencies
      run: |
        dotnet clean
        dotnet restore
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3 | cut -d "v" -f 2)
    - name: Build
      run: dotnet build --configuration Release
    - name: Pack
      run: dotnet pack Rebus.RabbitMq.sln -c Release -o ./artifacts -p:PackageVersion=${{ steps.get_version.outputs.VERSION }}
    - name: Push generated Rebus package to GitHub registry
      run: dotnet nuget push /home/runner/work/Rebus.RabbitMq/Rebus.RabbitMq/artifacts/Microting.Rebus.RabbitMq.${{ steps.get_version.outputs.VERSION }}.nupkg -k ${{secrets.NUGET_SECRET_KEY}} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols
